<!-- cart.handlebars -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carrito de Compras</title>
  <link rel="stylesheet" href="/styles.css">
  <script src="https://js.stripe.com/v3/"></script>
</head>
<body class="bg-gray-200">
  <div class="container mx-auto my-6">
    <h1 class="text-3xl font-semibold mb-6">Carrito de Compras</h1>
    <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {{#each cart.products}}
        <li class="bg-white p-4 shadow-md rounded-md">
          <h2 class="text-xl font-semibold mb-2">{{this.product.title}}</h2>
          <p class="text-gray-700">Precio: ${{this.product.price}}</p>
          <p class="text-gray-700">Cantidad: {{this.quantity}}</p>
          <button class="bg-red-500 text-white px-4 py-2 rounded-md mt-2" onclick="removeFromCart('{{this.product._id}}')">Eliminar</button>
        </li>
      {{/each}}
    </ul>

    <button class="bg-green-500 text-white px-4 py-2 rounded-md mt-4" onclick="checkout()">Pagar</button>
  </div>

  <script>
    // Configura la clave pública de Stripe
  const stripe = Stripe('pk_test_51OgXgIIJAfkNeHrjSc7mkixA9ETeigC3yAeGgC0d0caJLJyhAm1NGhQiNFvRH3aiiCx8OAnPPXKTz9MD6kuWrrSY00QO9dlMHD');
    // Función para eliminar un producto del carrito
    function removeFromCart(productId) {

      // Obtén el ID del producto desde el atributo data-product-id
      const productIdToRemove = productId;
      
      // Aquí puedes realizar una solicitud al servidor para eliminar el producto del carrito
      // Ejemplo de solicitud fetch (debes implementar tu ruta y método correspondientes)
      fetch(`/api/carts/:cid/products/${productIdToRemove}`, {
        method: 'DELETE',
      })
      .then(response => {
        if (response.status === 204) {
          // Producto eliminado con éxito
          console.log('Producto eliminado del carrito:', productIdToRemove);
          // Actualiza la vista o realiza cualquier otra acción necesaria
        } else {
          console.error('Error al eliminar el producto del carrito');
        }
      })
      .catch(error => {
        console.error('Error de red:', error);
      });
    }

    // Función para procesar el pago
      // Función para procesar el pago
   // Función para procesar el pago
  async function checkout() {
    // Aquí puedes obtener el monto total del carrito y otros detalles necesarios
    const totalAmount = calcularMontoTotal(); // Implementa esta función según tu lógica

    try {
      // Crea un pago en tu servidor
      const response = await fetch('/api/payment-intents', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ amount: totalAmount, currency: 'ARS' }), // Ajusta la moneda según tus necesidades
      });

      const { client_secret } = await response.json();

      // Confirma la autenticación del pago en el cliente
      const result = await stripe.confirmCardPayment(client_secret);
      if (result.error) {
        console.error('Error al confirmar el pago:', result.error.message);
        // Maneja el error según tus necesidades
      } else {
        // El pago fue confirmado exitosamente
        console.log('Pago confirmado:', result.paymentIntent);
        // Puedes redirigir al usuario a una página de confirmación o realizar otras acciones necesarias
      }
    } catch (error) {
      console.error('Error al procesar el pago:', error.message);
      // Maneja el error según tus necesidades
    }
  }
  </script>
</body>
</html>

